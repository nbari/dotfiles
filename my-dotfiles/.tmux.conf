# zsh
set-option -g default-shell /usr/local/bin/zsh
set-option -g default-command "reattach-to-user-namespace -l /usr/local/bin/zsh"

unbind C-b
set -g prefix `
bind ` send-prefix
# Allows to use C-b inside another tmux
bind-key b send-prefix

# vi bindings
set-option -g status-key vi
set-window-option -g mode-keys vi

# Set the maximum number of lines held in window history.
set -g history-limit 1000000
set-option -g status-bg "#000000"
set-option -g status-fg "#FDB813"
set-option -g status-interval 5
set-option -g status-right-length 90
set-option -g status-right '[ #H ]#[fg=colour012]#(uptime | grep -o "...user.*")#[fg=colour007]  %H:%M:%S'
set-option -g status-position top

setw -g window-status-current-bg '#006994'
setw -g window-status-current-fg '#FFFFFF'
setw -g window-status-bg '#000000'
setw -g window-status-fg '#d3d3d3'

# window title string (uses statusbar variables)
set -g set-titles on
set -g set-titles-string "#T"

# keybindings to make resizing easier with HJKL
bind -r h resize-pane -L
bind -r j resize-pane -D
bind -r k resize-pane -U
bind -r l resize-pane -R
bind -r H resize-pane -L 10
bind -r J resize-pane -D 10
bind -r K resize-pane -U 10
bind -r L resize-pane -R 10

# Smart pane switching with awareness of vim splits
# bind -n C-h if "[ $(tmux display -p '#{pane_current_command}') = vim ]" "send-keys C-h" "select-pane -L"
# bind -n C-j if "[ $(tmux display -p '#{pane_current_command}') = vim ]" "send-keys C-j" "select-pane -D"
# bind -n C-k if "[ $(tmux display -p '#{pane_current_command}') = vim ]" "send-keys C-k" "select-pane -U"
# bind -n C-l if "[ $(tmux display -p '#{pane_current_command}') = vim ]" "send-keys C-l" "select-pane -R"

not_tmux='`echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"` || `echo "#{pane_start_command}" | grep -iqE "fzf"` || `echo "#{pane_current_command}" | grep -iqE "fzf"`'
bind-key -n C-h if-shell "$not_tmux" "send-keys C-h" "select-pane -L"
bind-key -n C-j if-shell "$not_tmux" "send-keys C-j" "select-pane -D"
bind-key -n C-k if-shell "$not_tmux" "send-keys C-k" "select-pane -U"
bind-key -n C-l if-shell "$not_tmux" "send-keys C-l" "select-pane -R"
bind-key -n C-\ if-shell "$not_tmux" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

# easily toggle synchronization (mnemonic: e is for echo)
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# open in current_path
bind c new-window -c '#{pane_current_path}'
bind % split-window -h -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"

# reset & clear history
bind r send-keys -R \; send-keys C-l \; clear-history

# line & clock color
setw -g clock-mode-colour colour024
set -g pane-border-style fg=colour235
set -g pane-active-border-style fg=colour124

# copy to clipboard
bind-key -T copy-mode-vi 'Enter' send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
