# zsh
set-option -g default-shell /usr/local/bin/zsh
set-option -g default-command "reattach-to-user-namespace -l /usr/local/bin/zsh"

# Allows to use C-g instead C-b inside another tmux
#bind-key -n C-g send-prefix

# vi bindings
set-option -g status-key vi
set-window-option -g mode-keys vi
set -sg escape-time 0 # fix delay switching modes

# Set the maximum number of lines held in window history.
set -g history-limit 1000000
set-option -g mouse on
set-option -g status-bg "#000000"
set-option -g status-fg "#fDB813"
set-option -g status-interval 5
set-option -g status-position top
set-option -g status-right-length 90
set-option -g repeat-time 1000
# ----------------------------------------------------------------------------
# status bar
# ----------------------------------------------------------------------------
wg_is_keys_off="#[fg=#fDB813,bg=#000000]#([ $(tmux show-option -qv key-table) = 'off' ] && echo 'OFF')#[default]"
wg_uptime="#[fg=colour012]#(uptime | grep -o '..user.*')"
set-option -g status-right "$wg_is_keys_off [ #H ] $wg_uptime#[fg=colour007] %H:%M:%S"

setw -g window-status-current-style fg='#FFFFFF'
setw -g window-status-style bg='#000000'
setw -g window-status-style fg='#d3d3d3'

# window title string (uses statusbar variables)
set -g set-titles on
set -g set-titles-string "#T"

# keybindings to make resizing easier with HJKL
bind -r h resize-pane -L
bind -r j resize-pane -D
bind -r k resize-pane -U
bind -r l resize-pane -R
bind -r H resize-pane -L 10
bind -r J resize-pane -D 10
bind -r K resize-pane -U 10
bind -r L resize-pane -R 10

# Smart pane switching with awareness of vim splits
not_tmux='`echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(autossh|view|n?vim?x?)(diff)?$"` || `echo "#{pane_start_command}" | grep -iqE "fzf"` || `echo "#{pane_current_command}" | grep -iqE "fzf"`'
bind-key -n C-h if-shell "$not_tmux" "send-keys C-h" "select-pane -L"
bind-key -n C-j if-shell "$not_tmux" "send-keys C-j" "select-pane -D"
bind-key -n C-k if-shell "$not_tmux" "send-keys C-k" "select-pane -U"
bind-key -n C-l if-shell "$not_tmux" "send-keys C-l" "select-pane -R"
bind-key -n C-\ if-shell "$not_tmux" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

# easily toggle synchronization (mnemonic: e is for echo)
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# open in current_path
bind c new-window -c '#{pane_current_path}'
bind % split-window -h -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"

# reset & clear history
bind r send-keys -R \; send-keys C-l \; clear-history

# line & clock color
setw -g clock-mode-colour colour024
set -g pane-border-style fg=colour235
set -g pane-active-border-style fg=colour124

# copy to clipboard
bind-key -T copy-mode-vi 'Enter' send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Search back to last prompt (mnemonic: "[b]ack"); searches for non-breaking
# space in prompt.
# use <c-k> <space><space> to create the non-breaking space
bind-key b copy-mode\; send-keys -X start-of-line\; send-keys -X search-backward "Â "

# ----------------------------------------------------------------------------
# nested remote sessions
# ----------------------------------------------------------------------------
bind -T root C-g \
    set prefix None \;\
    set key-table off \;\
    set status off \;\
    if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
    refresh-client -S \;\

bind -T off C-g \
  set -u prefix \;\
  set -u key-table \;\
  set -u status on \;\
  refresh-client -S
